(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{5301:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return n(8974)}])},8974:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSP:function(){return R},default:function(){return B}});var i=n(5893),o=n(4323),r=n.n(o),a=n(7294),s=n(2676),c=n.n(s),l=n(4895),d=[{topic:"Decentralized Compute",artwork:(0,i.jsx)("img",{src:"https://user-images.githubusercontent.com/310223/150100275-423a64cb-df1f-4347-b981-4eca8f34b4c5.png",className:c().artworkTopic}),description:(0,i.jsx)(l.D,{children:"\n## Decentralized compute\n\n### The opportunity\n\nFilecoin and IPFS distribute content-addressed datasets across storage providers around the world to increase data redundancy and resiliency.\n\nSuch globally distributed data brings significant cost, availability, and reliability advantages, but can also mean that parts of a single\ndataset may end up stored geographically far away from one another. Executing computation jobs or data pipelines on globally distributed data\nis challenging.\n\n### The potential\n\nRegrouping highly distributed data into a central location to compute over it is expensive, underperformant, and, wasteful.\nInstead, pushing compute to the edges and coordinating its execution is a brand new possibility with FVM actors.\n\nFVM actors can broker computational resources, incentivize compute execution, distribute workloads across available storage providers,\nand prove the validity of the computation's result in order to claim rewards. Storage providers could enroll in compute networks through an FVM actor.\nCompute clients would post jobs to the actor. A mechanism would assign jobs to providers, and once executed, the provider would post a proof to claim rewards."})},{topic:"Data DAOs",artwork:(0,i.jsx)("img",{src:"https://user-images.githubusercontent.com/310223/150100369-3eb15e7c-aa57-4106-809e-6d8331fc2635.png",className:c().artworkTopic}),description:(0,i.jsx)(l.D,{children:"\n## Data DAOs\n\n### The opportunity\n        \nDAOs (Decentralized Autonomous Organizations) are distributed entities whose ownership, governance, and\ndecision-making processes are transparently conducted via on-chain activities. DAOs are tasked\nwith a collective mission.\n\nData DAOs are DAOs whose mission revolves around the preservation, curation, augmentation, and promotion\nof high-value datasets. Examples include large genomic or research databases, historical indexed\nblockchain chain and transaction data, rollup data, the Wikipedia, NFT collections, metaverse\nassets, and more.\n\nBecause stake in Data DAOs can be tokenized, the value and utility of data can be objectively expressed and\ntransacted with in markets, in exchange for services to be performed or offered on the data.\n\nFor example, interested parties could harvest tokens in a DAO-driven decentralize compute fabric by analyzing\ndatasets, performing scientific and ML modelling, calculate statistics, and more, all of which are actions that augment\nthe value, worth, and utility of the original data.\n\nStakeholders could in turn spend tokens to incentivise even more production of raw data, e.g. sensor data collection,\ngenerative art, and even human tasks (transcription, translation...), thus resulting in a circular data-centric economy.\n        \n### The potential\n\nThe FVM makes it possible to implement all the ingredients to make Data DAOs a reality.\nBy creating composable layers that can be combined together to form different kinds of DAOs,\nthe possiblities to break ground are immense."})},{topic:"Enabling L2 networks",artwork:(0,i.jsx)("img",{src:"https://user-images.githubusercontent.com/310223/150100446-5f87ea99-901c-4f9f-8532-83218eb6d443.png",className:c().artworkTopic}),description:(0,i.jsx)(l.D,{children:"\n## Enabling L2 networks\n\n### The opportunity\n\nL2s are independent networks \u2014with dedicated incentive constructions\u2014 that conduct specialized tasks\non top of the Filecoin network. Layer 2 solutions commit their state onto the Filecoin network (Layer 1),\nthus inheriting its security properties.\n\nExamples include:\n- Trustless reputation systems: measure and report the Quality of Service of storage providers,\n  as perceived from different geographical locations around the globe. \n- Data availability sampling networks: challenge storage providers by retrieving random data,\n  verifying correct delivery within a specific time window, and awarding incentives depending on outcome.\n- Content Delivery Networks that cache data stored in Filecoin deals by replicating it across a\n  number of geographies, and making it accessible through a number of transports, to ensure quick and\n  seamless retrieval around the globe. Participants get rewarded for caching and delivering content.\n\n### The potential\n\nBy deploying commitment or docking actors on the FVM, the Layer 2 solutions can (a) commit their state\non chain through verifiable proofs, (b) dispense participant rewards, (c) verify fraud proofs, amongst other tasks.\n"})},{topic:"Cross-network interoperability bridges",artwork:(0,i.jsx)("img",{src:"https://user-images.githubusercontent.com/310223/150100517-bdbe1ad3-5efd-48d0-ad9f-3e7eb5e93f2a.png",className:c().artworkTopic}),description:(0,i.jsx)(l.D,{children:"\n## Cross-network interoperability bridges\n\n### The opportunity\n\nThe requirement for storage services is ubiquitious. No matter the chain, network, or application,\nthrough cross-network on-chain bridges, smart contracts on other chains would be able to access\nFilecoin storage in a trustless manner. Similarly, Filecoin actors would be able to interact\nwith code on other chains, or generate proofs of Filecoin state or events that can be understood\nby counterparts such as Ethereum, NEAR, Solana, etc.\n\n### The potential\n\nBuilding a suite of FVM actors that can process cryptographic primitives and data structures\nof other chains through IPLD (Interplanetary Linked Data) opens up the doors to a new generation\nof cross-chain web3 use cases. For example, NFT registries could prohibit transactions unless it can\nbe proven that the underlying asset is stored on Filecoin, or rollup contracts could verify that the\naggregator has stored transaction data in Filecoin.\n."})},{topic:"New storage market primitives",artwork:(0,i.jsx)("img",{src:"https://user-images.githubusercontent.com/310223/150100579-361db82d-fa03-47b6-8e92-a27d9463b669.png",className:c().artworkTopic}),description:(0,i.jsx)(l.D,{children:"\n## New storage market primitives\n\n### The opportunity\n\nTo store data in the Filecoin network today, clients must find a suitable storage provider and perform a deal with them.\nThis model is simple but rather inflexible.\n\n### The potential\n\nTogether with some protocol refactors, the FVM will enable creating new market primitives and protocols, such as:\n\n- storage bounties, where storage providers compete to win deals, bringing the price down for clients. \n- full-sector auctions, where clients get a discount for purchasing and occupying entire sectors. \n- volume discounts, where the price is further reduced for purchasing multiple sectors at once. \n- sector rebates, where the provider refunds the client (who could be a Data DAO!) once they purchase N sectors over a specific period of time.\n"})},{topic:"Perpetual storage",artwork:(0,i.jsx)("img",{src:"https://user-images.githubusercontent.com/310223/150100696-867205b3-bb68-4920-b4ea-dc36cca07b4e.png",className:c().artworkTopic}),description:(0,i.jsx)(l.D,{children:"\n## Perpetual storage\n\n### The opportunity\n\nMany common-good datasets rely on stewarding organizations to ensure their preservation and continued accessibility\n(e.g. a government, corporation, or non-profit). Examples include crime statistics, inflation metrics, election results,\nenvironmental data records, etc.\n\nWhen this responsibility lies on a single organization, it can create a central point of failure and trust.\nIf that organization goes away or changes motivation, the common-good data could be lost forever or manipulated,\nresulting in an inadmissible net loss for society.\n\n### The potential\n\nWith Filecoin actors, the responsibility of ensuring liveness of valuable data is can be shared collectively.\nPermissionless code running autonomously on-chain can guarantee the continuation and renewal of storage,\nwith no risk of modification or alteration of the underlying datasets thanks to content-addressing.\n\nFunding mechanisms and decision-making can be coupled with Data DAOs and Staking Protocols\nto enable pay-once-store-forever mechanics."})},{topic:"Replication workers",artwork:(0,i.jsx)("img",{src:"https://user-images.githubusercontent.com/310223/150100748-e05a664c-2be4-4f28-87c0-1f9327da9e62.png",className:c().artworkTopic}),description:(0,i.jsx)(l.D,{children:"\n## Replication workers\n\n### The opportunity\n\nClients want their data to be replicated across the network to maximize the chances it will survive in the event of storage provider failures.\nTo achieve that today, clients have to execute N deals with storage providers, transferring the data N times.\nThis is a cumbersome and resource-intensive task for a client to perform in order to obtain redundancy.\n        \n### The potential\n\nReplication workers solve this problem by charging a small fee to act as a mediator, by saving the client the time and overhead of negotiating\nmultiple deals. Instead, the replication worker can automaticaly copy the Filecoin deal N times across the network in accordance with the\nuser-defined policy based on number of replicas, region selection, latency, price, etc. (potentially using L2 reputation systems to decide\nwhere to place the data!)"})},{topic:"Repair workers",artwork:(0,i.jsx)("img",{src:"https://user-images.githubusercontent.com/310223/150100748-e05a664c-2be4-4f28-87c0-1f9327da9e62.png",className:c().artworkTopic}),description:(0,i.jsx)(l.D,{children:"\n## Repair workers\n\n### The opportunity\n\nMany clients who store data on Filecoin want both the guarantee of a storage network that provably stores their data over time,\nand the ease of use of a fire-and-forget storage system they can trust to automatically repair itself over time.\n\n### The potential\n\nRepair workers solve this problem by automating the process of renewing expired or terminated deals - saving the client the time\nand overhead of manually refreshing deals 2, 5, or 10+ years in the future.\n\nInstead, the repair worker can monitor the chain on the clients behalf for any faults or expirations, and proactively replicate deal\ndata to more storage providers in accordance with a user-defined policy."})},{topic:"Staking Protocols",artwork:(0,i.jsx)("img",{src:"https://user-images.githubusercontent.com/310223/150100918-cbbbbe34-6092-4eb3-9a95-38550e1185c3.png",className:c().artworkTopic}),description:(0,i.jsx)(l.D,{children:"\n## Staking protocols\n\n### The opportunity\n\nStaking protocols can substantially improve the capital efficiency in the Filecoin economy by matching token holders\nwith storage providers seeking liquidity to fund their operations.\n\n### The potential\n\nWith staking protocols, token holders can trustlessly pool their assets and set rules and terms by which storage providers\n(of any size) can permissionlessly access that liquidity.\n\nStaking protocols can use on-chain data points (e.g. longevity of an address, history of slashing) to better assess risk\nand parameterize terms, while also allowing storage providers of all sizes to access capital.\n\nThis can help storage providers fund upfront capital costs like Filecoin Plus deal collateral,\nwhile giving staking pools access to yield potential."})},{topic:"Insurance protocols",artwork:(0,i.jsx)("img",{src:"https://user-images.githubusercontent.com/310223/150100987-efcf9c80-10a1-4ab0-968b-cc09024bdf4e.png",className:c().artworkTopic}),description:(0,i.jsx)(l.D,{children:"\n## Insurance protocols\n\n### The opportunity\n\nWhen offering storage services to the network, storage providers are required to put up a large amount of collateral to secure their\nservices in case of faults.\n\n### The potential\n\nInsurance protocols could help storage providers raise funds for these up-front costs from investors, or distribute risk of a fault across\na wider community. Investors (or DAOs) can receive a revenue stream by purchasing said risk in exchange for recurring fees."})},{topic:"Storage derivatives",artwork:(0,i.jsx)("img",{src:"https://user-images.githubusercontent.com/310223/150101071-d624afb8-a6c7-4ec9-bb01-d271c0d70b5b.png",className:c().artworkTopic}),description:(0,i.jsx)(l.D,{children:'\n## Storage derivatives\n\n### The opportunity\n\nThe dynamic nature of decentralized storage costs poses planning challenges for both storage clients and providers.\nData producers (clients) sometimes need to store data in the future for a predefined period of time and will want to budget in costs now\n(e.g. a Metaverse artist who knows they will need to store 1 TB of digital assets by the end of December 2022).\n\nSimilarly, storage providers may want to determine how much to spend on hardware based on their predicted earnings.\nProviding a way to smooth predictability of future costs and returns may bring stability to this market and reduce risk.\n\n### The potential\n\nBy enabling providers to offer the equivalent of physically-settled options over storage, users could "pre-buy" a chunk of storage space\nat a specific price today, a data producer will be able to predict their costs over a given period of time. Conversely,\nby enabling a storage provider to bid on delivering a block of storage in the future, they can secure demand upfront in order\nto efficiently manage inventory, hardware, operations, and financials.'})}],u=n(8191),h=n(7410);function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var m=function(e){return(0,i.jsx)("svg",function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){p(e,t,n[t])}))}return e}({},e,{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",children:(0,i.jsx)("polyline",{points:"22 12 18 12 15 21 9 3 6 12 2 12"})}))},g=n(1523),f=n(5620),b=n(4189),v=n(895),y=n.n(v);function w(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],i=!0,o=!1,r=void 0;try{for(var a,s=e[Symbol.iterator]();!(i=(a=s.next()).done)&&(n.push(a.value),!t||n.length!==t);i=!0);}catch(c){o=!0,r=c}finally{try{i||null==s.return||s.return()}finally{if(o)throw r}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var x=function(e){var t=w(a.useState({index:0}),2),n=t[0],o=t[1],r=function(){var e=w(a.useState({width:void 0,height:void 0}),2),t=e[0],n=e[1];return a.useEffect((function(){var e=function(){n({width:window.innerWidth,height:window.innerHeight})};return window.addEventListener("resize",e),e(),function(){return window.removeEventListener("resize",e)}}),[]),t}().width;return(0,i.jsxs)("div",{className:y().container,id:"topic-grid-section",children:[(0,i.jsx)("div",{className:y().topics,children:e.topics.map((function(e,t){var a=n.index===t;return(0,i.jsxs)("span",{className:y().slot,children:[(0,i.jsxs)("section",{className:y().item,style:{background:a?"var(--color-dark-black-highlight)":null},onClick:function(){document.querySelector("#topic-grid-section").scrollIntoView(),o({index:t})},children:[(0,i.jsx)("div",{className:y().artwork,style:{height:a?"auto":"0px",opacity:a?1:0,transform:a?"translateY(0px)":"translateY(-48px)",visibility:a?"visible":null},children:e.artwork}),(0,i.jsx)("div",{className:y().text,children:e.topic})]}),a&&r<768?(0,i.jsx)("div",{className:y().content,children:(0,i.jsx)("div",{className:y().rich,children:e.description})}):null]},"".concat(e.topic))}))}),r>=768?(0,i.jsx)("div",{className:y().desktopContent,children:(0,i.jsx)("div",{className:y().content,children:(0,i.jsx)("div",{className:y().rich,children:e.topics[n.index].description})})}):null]})},j=n(4633),k=n.n(j),T=function(e){return(0,i.jsx)("span",{className:k().tag,style:e.style,children:e.children})},F=n(7550),M=n.n(F),N=n(7087),D=n(3618);function S(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){S(e,t,n[t])}))}return e}var V=function(e){return(0,i.jsx)("div",{className:M().code,children:(0,i.jsx)(N.ZP,_({},N.lG,{code:e.code,language:"c",theme:D.Z,children:function(e){var t=e.className,n=e.style,o=e.tokens,r=e.getLineProps,a=e.getTokenProps;return(0,i.jsx)("pre",{className:t,style:_({},n,{backgroundColor:"var(--color-inset)"}),children:o.map((function(e,t){return(0,i.jsx)("div",_({},r({line:e,key:t}),{children:e.map((function(e,t){return(0,i.jsx)("span",_({},a({token:e,key:t})))}))}))}))})}}))})},E=n(7504),I=n(1775);function O(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function P(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function A(e){return(0,i.jsxs)("a",{className:r().listItem,href:e.href,target:"_blank",children:[e.image?(0,i.jsx)("img",{className:r().listItemLeft,src:e.image}):null,(0,i.jsxs)("span",{className:r().listItemRight,children:[(0,i.jsxs)("span",{className:r().listItemTitle,style:{marginTop:0},children:[e.title,"\xa0",e.tag]}),(0,i.jsx)("span",{className:r().listItemParagraph,children:e.children})]})]})}function C(e){var t=(0,i.jsx)("span",{className:r().timelineItemDot});return e.isActive&&(t=(0,i.jsx)("span",{className:r().timelineItemDot,style:{background:"var(--theme-success)",color:"#fff"},children:(0,i.jsx)(m,{height:"16px"})})),e.isPrior&&(t=(0,i.jsx)("span",{className:r().timelineItemDot,style:{background:"var(--theme-success)",color:"#fff"}})),(0,i.jsxs)("span",{className:r().timelineItem,children:[(0,i.jsxs)("span",{className:r().timelineItemDate,children:[(0,i.jsx)("div",{children:e.date}),e.est?(0,i.jsx)("div",{children:"(Est.)"}):null]}),t,(0,i.jsxs)("span",{className:r().timelineItemText,children:[(0,i.jsx)("section",{className:r().line}),(0,i.jsx)("div",{className:r().h3,children:e.title}),(0,i.jsx)("div",{className:r().desc,style:{marginTop:12},children:e.children})]})]})}var R=!0,B=function(e){var t=0,n={h2:function(e){e.node;var n=P(e,["node"]);t+=1;var o="".concat(u.qi(n.children),"-").concat(t);return(0,i.jsx)("a",function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){O(e,t,n[t])}))}return e}({id:o,className:r().synthetich2,href:"#".concat(o)},n))}};return a.useEffect((function(){document.getElementById("video").play()}),[]),(0,i.jsxs)(g.Z,{title:"Filecoin Virtual Machine",description:"Smart contracts + provable storage = Filecoin Virtual Machine. Learn about the technology, the possibilities, and the roadmap. Find developer resources, and apply for grants.",url:"https://fvm.filecoin.io",children:[(0,i.jsx)(b.Z,{}),(0,i.jsxs)("div",{className:r().center,style:{marginTop:16,marginBottom:48},children:[(0,i.jsx)("div",{className:r().centerText,children:"Smart contracts + provable storage = FVM"}),(0,i.jsx)("video",{id:"video",autoPlay:!0,muted:!0,loop:!0,playsInline:!0,src:"https://user-images.githubusercontent.com/310223/150047240-2e4215c1-692f-4857-9c19-6e0433f044d6.mp4"})]}),(0,i.jsx)(E.Z,{children:(0,i.jsxs)("div",{className:r().withCode,children:[(0,i.jsxs)("div",{className:r().left,children:[(0,i.jsx)("div",{className:r().markdown,children:(0,i.jsx)(l.D,{components:n,children:"## Possibilities\n\nThe FVM unlocks boundless possibilities, ranging from **programmable storage primitives** (such as storage bounties, auctions, and more), to **cross-chain interoperability bridges** (e.g. trustlessly connecting Filecoin with Ethereum, Solana, NEAR, and more), to **data-centric Decentralized Autonomous Organizations (DAOs)**, to **Layer 2 solutions** (such as reputation systems, data availability sampling, computation fabrics, and incentive-aligned Content Delivery Networks), and more.\n\nHere are some of the things we're excited to see deployed on the Filecoin network. It's up to you to make them happen!\n"})}),(0,i.jsx)(h.Z,{style:{marginTop:32,color:"#fff"},href:"https://filecoin.io/slack",children:"Chat with developers \u279d"})]}),(0,i.jsx)(V,{code:'/// A Filecoin actor brokering decentralized compute jobs.\n/// For illustration purposes only.\n#[fvm_actor(state=ComputeState, dispatch="method_num")]\nimpl ComputeActor {\n\n  /// Creates a job with an input DAG, WASM compute logic,\n  /// data affinity, geographical bounds, and timeout.\n  pub fn create_job(req: CreateJobReq, st: ComputeState)\n    -> CreateJobRes { ... }\n\n  /// Allows a compute node to claim a job by proving it\n  /// satisfies the requirements and staking collateral.\n  pub fn claim_job(req: ClaimJobReq, st: ComputeState)\n    -> ClaimJobRes { ... }\n\n  /// Proves that a compute node finished running a job,\n  /// posts the result, and claims the reward.\n  pub fn prove_done(req: ProveDoneReq, st: ComputeState)\n    -> ProveDoneRes { ... }\n}'})]})}),(0,i.jsx)("div",{className:r().row,style:{marginTop:48},children:(0,i.jsx)(x,{topics:d})}),(0,i.jsx)(E.Z,{style:{marginTop:128,marginBottom:88},children:(0,i.jsxs)("div",{className:r().withCode,children:[(0,i.jsxs)("div",{className:r().left,children:[(0,i.jsx)("div",{className:r().markdown,children:(0,i.jsx)(l.D,{components:n,children:"## A robust WASM-based VM\n\nThe FVM is a WASM-based polyglot execution environment for IPLD data. It is designed to support native Filecoin actors written in languages that compile to WASM, as well as smart contracts written for foreign runtimes including the Ethereum Virtual Machine (EVM), Secure EcmaScript (SES), and eBPF.\n\nThe initial version of the FVM is relatively simple and deliberately conservative in features. This enables developers onboard quickly, and serves as a rock-solid foundation for many innovations to come.\n\nExamples of future ideas include: async programming via continuations/futures, capability-orientation, time-locked transactions (using external beacons), parallel execution, native primitives for cross-chain interoperability, computation correctness proofs, and more.\n\nThe reference FVM and SDK are written in Rust. If you'd like to contribute, explore ideas, or build alternative implementations in other languages, please reach out.\n"})}),(0,i.jsx)(h.Z,{style:{marginTop:32,color:"#fff"},href:"https://github.com/filecoin-project/ref-fvm",children:"View in GitHub \u279d"})]}),(0,i.jsx)("div",{className:r().withImage,children:(0,i.jsx)("img",{style:{display:"block",width:"100%"},src:"https://user-images.githubusercontent.com/310223/150043037-d17ca5d3-f21c-4afc-850c-968807014524.png"})})]})}),(0,i.jsx)(E.Z,{style:{marginTop:128,marginBottom:88},children:(0,i.jsxs)("div",{className:r().withCode,children:[(0,i.jsx)("div",{className:r().left,children:(0,i.jsx)("div",{className:r().markdown,children:(0,i.jsx)(l.D,{components:n,children:"## EVM compatibility\n\nThe FVM supports EVM smart contracts out of the box. It emulates EVM bytecode at the low-level, supporting contracts written in Solidity, Vyper, and Yul.\n\nYou can continue using all the developer tooling you're familiar with: Remix, Truffle, Hardhat, OpenZeppelin SDK, and more. Most smart contracts ported to Filecoin shouldn't require changes nor auditing.\n\nThe EVM foreign runtime is based on pre-existing OSS libraries including [SputnikVM](https://github.com/rust-blockchain/evm) and [revm](https://github.com/bluealloy/revm). It is the first of several foreign runtimes we plan to support.\n\nSupport for EVM smart contract deployment is expected to go live in Milestone 2 (see below).\n\nCurious about technical details? Find out more in the [EVM <> FVM mapping specification](https://github.com/filecoin-project/fvm-project/blob/main/04-evm-mapping.md).\n"})})}),(0,i.jsx)(V,{code:'\n//\n// The standard ERC-721 contract from OpenZeppelin SDK.\n//\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n  using Address for address;\n  using Strings for uint256;\n\n  function balanceOf(address owner) public view virtual\n    override returns (uint256)\n  {\n    require(owner != address(0),\n      "ERC721: balance query for the zero address");\n    return _balances[owner];\n  }\n\n  function transferFrom(\n    address from,\n    address to,\n    uint256 tokenId\n  ) public virtual override {\n    require(_isApprovedOrOwner(_msgSender(), tokenId),\n      "ERC721: transfer caller is not owner nor approved");\n\n    _transfer(from, to, tokenId);\n  }\n}\n'})]})}),(0,i.jsxs)(E.Z,{style:{marginTop:128,marginBottom:88},children:[(0,i.jsx)("div",{className:r().left,style:{marginBottom:48},children:(0,i.jsx)("div",{className:r().markdown,children:(0,i.jsx)(l.D,{components:n,children:"## Roadmap\n\n**The Filecoin Virtual Machine is being introduced incrementally.** This minimizes the risk of disruption to the network, and gives developers plenty of opportunities to engage early on."})})}),(0,i.jsx)(C,{date:"Feb 2022",isPrior:!0,title:"Milestone 0: Lotus mainnet canaries with FVM support",children:(0,i.jsx)(l.D,{components:n,children:"The reference FVM implementation has been integrated into a fork of Lotus (the Filecoin reference client).\n            A fleet of canary nodes have been launched on mainnet, running WASM-compiled built-in actors on the FVM.\n            The canaries are monitored for consensus faults and to gather telemetry. This milestone is a testing milestone that's critical to collect raw execution data to feed into the overhaul of the gas model, in preparation for user-programmability. It implies no network upgrade."})}),(0,i.jsx)(C,{date:"Mar 2022",isPrior:!0,title:"Milestone 0.5: Ability to run FVM node and sync mainnet",children:(0,i.jsx)(l.D,{components:n,children:"Any node operator can sync the Filecoin Mainnet using the FVM and Rust built-in actors, integrated in lotus, venus, forest, and fuhon implementations. It implies no network upgrade."})}),(0,i.jsx)(C,{date:"May 2022",isActive:!0,title:"Milestone 1: Introduction of non-programmable WASM-based FVM",children:(0,i.jsx)(l.D,{components:n,children:"Mainnet will atomically switch from the current legacy VMs to the WASM-based reference FVM. A new gas model will be activated that accounts for actual WASM execution costs. Only Rust built-in actors will be supported at this time. This milestone requires a network upgrade."})}),(0,i.jsx)(C,{date:"Sep 2022",title:"Milestone 2.1: Ability to deploy native FVM user actors to mainnet",est:!0,children:(0,i.jsx)(l.D,{components:n,children:"The FVM will become user-programmable for the first time. Developers will be able to deploy custom smart contracts to the Filecoin mainnet through native actors. SDKs, tutorials, and other developer materials will be generally available. This milestone requires a network upgrade."})}),(0,i.jsx)(C,{date:"Sep 2022",title:"Milestone 2.2: Ability to deploy EVM contracts to mainnet",est:!0,children:(0,i.jsx)(l.D,{components:n,children:"The FVM delivers the first foreign runtime, the EVM runtime. Developers will be able to deploy custom code to the Filecoin mainnet through EVM smart contracts. SDKs, tutorials, and other developer materials will be generally available. This milestone may require a network upgrade (TBD)."})}),(0,i.jsx)(C,{date:"\xa0\xa0\xa0\xa02022",title:"Milestone 3+: Incremental protocol refactors to enhance programmability",last:!0,children:(0,i.jsx)(l.D,{components:n,children:"A series of incremental protocol upgrades to move system functionality from privileged space to user space. The result will be a lighter and less opinionated base Filecoin protocol, where storage markets, deal-making, incentives, etc. are extensible, modular, and highly customizable through user-deployed actors. Enhanced programmability features such as user-provided cron, async call patterns, and more will start to be developed at this stage."})})]}),(0,i.jsx)(E.Z,{style:{marginTop:128},children:(0,i.jsx)("div",{className:r().left,children:(0,i.jsx)("div",{className:r().markdown,children:(0,i.jsx)(l.D,{components:n,children:"## Get ready to build\n\nActors are the equivalent of smart contracts in Filecoin. Deploy\n          existing EVM smart contracts as Filecoin actors, or write native\n          actors from scratch using the reference Rust SDK (or create your own\n          SDK!)."})})})}),(0,i.jsxs)("div",{className:r().row,children:[(0,i.jsxs)("div",{className:r().rowCol,children:[(0,i.jsx)("h3",{className:r().h3custom,style:{marginTop:48},children:"Source code"}),(0,i.jsx)(A,{title:"FVM Reference Implementation",href:"https://github.com/filecoin-project/ref-fvm",image:"https://user-images.githubusercontent.com/310223/150099010-e29f780d-d7c8-4a23-afe0-81fcf4dc2d0a.png",children:"Follow the development activity on GitHub and stay up to date."}),(0,i.jsx)("h3",{className:r().h3custom,style:{marginTop:48},children:"Developer resources"}),(0,i.jsx)(A,{title:"Development activity",href:"https://github.com/filecoin-project/fvm/issues",image:"https://user-images.githubusercontent.com/310223/150099264-7b99e4c4-466a-4354-bae1-12fa5cb4f994.png",children:"Follow the development activity on GitHub and stay up to date."}),(0,i.jsx)(A,{title:"Tutorials",tag:(0,i.jsx)(T,{children:"Coming Soon"}),image:"https://user-images.githubusercontent.com/310223/150099355-0f271757-9c8e-48f9-998e-7a780f7a691d.png",children:"Learn how to deploy to the FVM with some simple tutorials."}),(0,i.jsx)("h3",{className:r().h3custom,style:{marginTop:48},children:"Specifications"}),(0,i.jsx)(A,{title:"FVM Architecture",href:"https://github.com/filecoin-project/fvm-project/blob/main/01-architecture.md",image:"https://user-images.githubusercontent.com/310223/150099422-4a69343a-67f3-4ad9-b925-0ce75e8c6de6.png",children:"Learn how the FVM works, and the technologies involved."}),(0,i.jsx)(A,{title:"EVM Compatibility",href:"https://github.com/filecoin-project/fvm-specs/blob/main/04-evm-mapping.md",image:"https://user-images.githubusercontent.com/310223/150099475-802e54f5-42f0-41ba-922d-33e9cafacbf2.png",children:"Learn how the EVM emulation works within the FVM."})]}),(0,i.jsxs)("div",{className:r().rowCol,children:[(0,i.jsx)("h3",{className:r().h3custom,style:{marginTop:48},children:"Reference SDK"}),(0,i.jsx)(A,{title:"Rust SDK",image:"https://user-images.githubusercontent.com/310223/150099590-df594ef6-c554-4342-81a2-2ff5cf111776.png",tag:(0,i.jsx)(T,{style:{background:"#ff0000",color:"#fff"},children:"WIP"}),children:"Write Filecoin actors in Rust"}),(0,i.jsx)("h3",{className:r().h3custom,style:{marginTop:48},children:"Community SDKs"}),(0,i.jsx)(A,{title:"AssemblyScript SDK",image:"https://user-images.githubusercontent.com/310223/150099648-ab0b3075-336f-448a-b499-679eee9038f3.png",tag:(0,i.jsx)(T,{style:{background:"#6c2fed",color:"#fff"},children:"Grant available"}),children:"Interested in writing Filecoin actors in AssemblyScript? Become an Early Builder and create the SDK yourself!"}),(0,i.jsx)(A,{title:"Swift SDK",image:"https://user-images.githubusercontent.com/310223/150099711-a066f214-9539-49ed-890f-53efe0802bc9.png",tag:(0,i.jsx)(T,{style:{background:"#6c2fed",color:"#fff"},children:"Grant available"}),children:"Interested in writing Filecoin actors in Swift? Become an Early Builder and create the SDK yourself!"}),(0,i.jsx)(A,{title:"Kotlin SDK",image:"https://user-images.githubusercontent.com/310223/150099855-b86bbe91-4833-4304-9ae9-43635bd262fc.png",tag:(0,i.jsx)(T,{style:{background:"#6c2fed",color:"#fff"},children:"Grant available"}),children:"Interested in writing Filecoin actors in Kotlin? Become an Early Builder and create the SDK yourself!"}),(0,i.jsx)(A,{title:"Go SDK",image:"https://user-images.githubusercontent.com/310223/150099917-a339336e-1060-4359-968f-561100f2f00c.png",tag:(0,i.jsx)(T,{style:{background:"#6c2fed",color:"#fff"},children:"Grant available"}),children:"Write Filecoin actors in Go (TinyGo)? Become an Early Builder and create the SDK yourself!"})]})]}),(0,i.jsx)(E.Z,{style:{marginTop:128},children:(0,i.jsx)("div",{className:r().left,children:(0,i.jsx)("div",{className:r().markdown,children:(0,i.jsx)(l.D,{components:n,children:"## Dive right in"})})})}),(0,i.jsx)(I.Z,{style:{paddingBottom:128}}),(0,i.jsx)(E.Z,{style:{marginTop:128,marginBottom:88},children:(0,i.jsxs)("div",{className:r().withCode,children:[(0,i.jsx)("div",{className:r().left,children:(0,i.jsx)("div",{className:r().markdown,children:(0,i.jsx)(l.D,{components:n,children:"## FVM Bug Bounty Program\n\nThe Filecoin VM team invites hackers to help us find potential vulnerabilities in the FVM codebase. The FVM will be added to the live Filecoin network in several milestones.\n\n*Bug Bounties are now live for Milestone 1 until the end of May.*\n\n> Rewards for FVM bug bounties are the same as in the [regular bug bounty program](https://security.filecoin.io/bug-bounty/#rewards) for the Filecoin project. To submit a bug report please [contact us here](https://security.filecoin.io/#vulnerability-reporting).\n\n&nbsp;\n\nWhat\u2019s in scope:\n* [Ref FVM](https://github.com/filecoin-project/ref-fvm) - reference implementation of the Filecoin VM ([specs](https://github.com/filecoin-project/fvm-project)). Written in Rust and intended to be integrated via FFI into non-Rust Filecoin clients like Lotus.\n* [Lotus - Ref FVM integration](https://github.com/filecoin-project/lotus/pull/8293) - integration of the Ref FVM into Lotus via FFI. Written in Go. (The PR listed is merely an entry point into the codebase, but the scope is not limited to it. Please review what's on master and other pending PRs.)\n\n* [Lotus - Filecoin FFI](https://github.com/filecoin-project/filecoin-ffi/pull/217) - the FFI glue code. Written in Go and Rust. (As above, the PR linked is merely an entry point, but the scope is not limited to it.)\n\n* [Builtin Actors](https://github.com/filecoin-project/canonical-actors) - written in Rust, WASM-compiled built-in actors (i.e., smart contracts) used by all Filecoin clients. An [actors spec](https://spec.filecoin.io/systems/filecoin_vm/actor/) and [test vectors](https://github.com/filecoin-project/specs-actors/tree/master/test-vectors) are available for reference. An executable spec in Go is available at [spec-actors](https://github.com/filecoin-project/specs-actors) \u2014 these actors power the live network pre-FVM. (Note that auditing actors normally requires Filecoin domain expertise).\n* Exclusions to Scope including Known Issues are [listed here on Github](https://github.com/filecoin-project/ref-fvm/issues/428) and will be regularly updated.\n\n    &nbsp;\n\nMilestone 1 is scheduled for deployment to Filecoin mainnet in May 2022.\n\nMilestone 2 will introduce EVM-compatibility and user-programmable actors. Milestone 2 will likely be available for bug bounties in July, before deployment to mainnet in September 2022 (estimated).\n    "})})}),(0,i.jsxs)("div",{className:r().withImage,children:[(0,i.jsx)("img",{style:{width:"50%"},className:r().hideMobile,src:"https://user-images.githubusercontent.com/310223/150098621-c5b41b36-ff7d-4a56-86e7-b7f130e845a0.png"}),(0,i.jsx)("img",{style:{width:"70%",marginTop:"-30%",float:"right"},className:r().hideMobile,src:"https://user-images.githubusercontent.com/310223/150098321-f57a44b9-e4a6-4ca6-bbf5-6b6e518b69c5.png"}),(0,i.jsx)("img",{style:{width:"90%",marginTop:"-20%",float:"left"},className:r().hideMobile,src:"https://user-images.githubusercontent.com/310223/150098442-eedc60d2-11a2-452b-aea0-9572fe56d8c7.png"})]})]})}),(0,i.jsx)(f.Z,{})]})}},2676:function(e){e.exports={artworkTopic:"Data_artworkTopic__14UO1"}},7550:function(e){e.exports={code:"CodeBlock_code___gMmb"}},4633:function(e){e.exports={tag:"Tag_tag__Sg7ta"}},895:function(e){e.exports={container:"TopicPickerGrid_container__sn80I",topics:"TopicPickerGrid_topics__1LbJc",desktopContent:"TopicPickerGrid_desktopContent__XDZeV",desktopContentRow:"TopicPickerGrid_desktopContentRow__M7gpx",slot:"TopicPickerGrid_slot__hQW_M",content:"TopicPickerGrid_content__G5xUi",item:"TopicPickerGrid_item__C9upt",artwork:"TopicPickerGrid_artwork__GwIoE",text:"TopicPickerGrid_text__yGK1y",rich:"TopicPickerGrid_rich__T7qkg",fadeIn:"TopicPickerGrid_fadeIn__r7Zri"}}},function(e){e.O(0,[129,730,427,774,888,179],(function(){return t=5301,e(e.s=t);var t}));var t=e.O();_N_E=t}]);